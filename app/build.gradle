apply plugin: 'com.android.application'

repositories {
  mavenCentral()
  //noinspection JcenterRepositoryObsolete
  jcenter()
}

android {
  compileOptions {
    sourceCompatibility 1.8
    targetCompatibility 1.8
  }
  compileSdkVersion 31
  defaultConfig {
    applicationId "dk.aivclab.demo"
    minSdkVersion 21
    targetSdkVersion 31
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  buildToolsVersion = '30.0.3'
  ndkVersion '23.0.7196353 rc2'
  dependenciesInfo {
    includeInApk false
    includeInBundle false
  }
}

dependencies {
  implementation 'androidx.appcompat:appcompat:1.3.1'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.0'

  def camerax_version = '1.1.0-alpha05'
  def camerax_version2 = '1.0.0-alpha25'
  //noinspection GradleDependency
  implementation "androidx.camera:camera-core:$camerax_version"
  //noinspection GradleDependency
  implementation "androidx.camera:camera-camera2:$camerax_version"
  //noinspection GradleDependency
  implementation "androidx.camera:camera-lifecycle:$camerax_version"


  //noinspection GradleDependency
  implementation "androidx.camera:camera-view:$camerax_version2"
  //noinspection GradleDependency
  implementation "androidx.camera:camera-extensions:$camerax_version2"


  implementation 'com.google.android.material:material:1.5.0-alpha03'

  //implementation 'org.pytorch:pytorch_android:1.9.0' //lite duplicate!
  //noinspection GradleDependency
  implementation 'org.pytorch:pytorch_android_torchvision:1.8.0'
  //noinspection GradleDependency
  implementation 'org.pytorch:pytorch_android:1.8.0'


  implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'
}

//android.applicationVariants.all { variant ->
//  task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
//    description "Generates Javadoc for $variant.name."
//
//    //(project.android.sourceSets.main.java.srcDirs also works if you don't care about variants)
//    source = variant.javaCompile.source
//    //source = project.android.sourceSets.main.java.srcDirs
//    destinationDir = file("$rootDir/docs/")
//    failOnError false
//
//
//    doFirst {
//      ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
//      classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
//      //exclude '**/BuildConfig.java'
//      //exclude '**/R.java'
//
//      // I used a custom doclet
//      //options.docletpath = configurations.umlDoclet.files as List
//      //options.doclet = "nl.talsmasoftware.umldoclet.UMLDoclet"
//
//      options.addStringOption "-show-members", "package"
//      // more doclet options here...
//
//      options.links "https://developer.android.com/reference/"
//    }
//  }
//}
task generateApiDoc() {
  group "reporting"
  description "Generates Javadoc."
}

android.applicationVariants.all { variant ->

  def task = project.tasks.create("generate${variant.name.capitalize()}Javadoc", Javadoc) {
    title "API Documentation (${project.android.defaultConfig.versionName})"
    group "ApiDoc"
    description "Generates Javadoc for $variant.name."

    // Source files from the variant
    source = variant.sourceSets.collect { it.java.sourceFiles }.inject { m, i -> m + i }

    destinationDir = file("$rootDir/docs/")

    // To fix issue: Error: Can not create variant 'android-lint' after configuration ': library: debugRuntimeElements' has been resolved
    doFirst {
      classpath = project.files(variant.javaCompileProvider.get().classpath.files,
              project.android.getBootClasspath())
    }

    if (JavaVersion.current().isJava8Compatible()) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }

    exclude "**/R"
    exclude "**/R.**"
    exclude "**/R\$**"
    exclude "**/BuildConfig*"

    if (JavaVersion.current().isJava8Compatible()) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }

    options.windowTitle = "API Documentation (${project.android.defaultConfig.versionName})"
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.linkSource false
    options.author = false

    failOnError true
  }

  task.dependsOn "assemble${variant.name.capitalize()}"
  generateApiDoc.dependsOn task
}
